---
- hosts: localhost
  become: yes
  become_user: root
  become_method: sudo
  tasks:
    - name: Enable nginx for amazon linux 2
      shell: "amazon-linux-extras enable nginx1.12"
      become: yes
    - name: Install nginx
      yum:
        name: nginx
        state: latest
    - name: start nginx
      service:
          name: nginx
          state: started
    - name: Copy nginx file.
      copy:
        src: "./nginx-files/nginx.conf"
        dest: "/etc/nginx/nginx.conf"
        mode: 0644
    - name: Copy site.conf
      copy: 
        src: "./nginx-files/site.conf"
        dest: "/etc/nginx/conf.d/site.conf"
        mode: 0644
    - name: Creates webpage dir.
      file: 
        path: "/var/www/site"
        state: directory
    - name: Creates webpage dir.
      file: 
        path: "/var/www/site/js"
        state: directory
    - name: Copy static file
      copy:
        src: "./nginx-files/index.html"
        dest: "/var/www/site/index.html"
        mode: 0644
    - name: Copy static file
      copy:
        src: "./nginx-files/health.html"
        dest: "/var/www/site/health.html"
        mode: 0644
    - name: Copy static file
      copy:
        src: "./nginx-files/js/jquery.min.js"
        dest: "/var/www/site/js/jquery.min.js"
        mode: 0644
    - name: Copy static file
      copy:
        src: "./nginx-files/js/jquery.numeric-min.js"
        dest: "/var/www/site/js/jquery.numeric-min.js"
        mode: 0644
    - name: Restart Nginx
      service: name=nginx state=restarted
      become: yes
      
    - name: Download GOLang
      get_url:
        url: "https://dl.google.com/go/go1.13.linux-amd64.tar.gz"
        dest: /usr/local/src/go1.13.linux-amd64.tar.gz
        checksum: "sha256:68a2297eb099d1a76097905a2ce334e3155004ec08cdea85f24527be3c48e856"

    - name: Register the current version
      command: /usr/local/go/bin/go version
      ignore_errors: yes
      register: go_version
      changed_when: false

    - name: Remove old installation of Go
      file:
        path: /usr/local/go
        state: absent
      when: go_version|failed or go_version.stdout != go_version_target

    - name: Extract the Go tarball if Go is not yet installed or not the desired version
      unarchive:
        src: /usr/local/src/go1.13.linux-amd64.tar.gz
        dest: /usr/local
        copy: no
      when: go_version|failed or go_version.stdout != go_version_target
      
    - name: Export go path
      shell: export GOPATH="$HOME/go"
    - name: Export go path
      shell: export GOBIN="$GOPATH/bin"
    - name: Export go path
      shell: export PATH="$PATH:$GOROOT/bin:$GOBIN"
      
    - name: Adding the path in the bashrc files
      shell: echo 'export PATH=$PATH:/usr/local/go/bin' >> /root/.bash_profile

    - name: setting path
      shell: export PATH=$PATH:/usr/local/go/bin
       
    - name: Go get packages 
      shell: go get -v -u github.com/gorilla/mux

    - name: Creates go dir.
      file: 
        path: "/root/go-project"
        state: directory
        
    - name: Creates go dir.
      file: 
        path: "/root/go-project"
        state: directory
        
    - name: Copy go file
      copy: 
        src: "../Golang/main.go"
        dest: "/root/go-project/main.go"
        mode: 0755
        
    - name: Install project
      shell: "(cd /root/go-project; go install main.go)"
    
    - name: Start application
      shell: "(nohup main >/dev/null 2>&1 &)"

